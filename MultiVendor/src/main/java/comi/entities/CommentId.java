package comi.entities;
// Generated Jun 9, 2019 4:54:54 PM by Hibernate Tools 5.1.7.Final

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * CommentId generated by hbm2java
 */
@Embeddable
public class CommentId implements java.io.Serializable {

	private int id;
	private int userid;
	private int productid;
	private String context;

	public CommentId() {
	}

	public CommentId(int id, int userid, int productid, String context) {
		this.id = id;
		this.userid = userid;
		this.productid = productid;
		this.context = context;
	}

	@Column(name = "id", nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "userid", nullable = false)
	public int getUserid() {
		return this.userid;
	}

	public void setUserid(int userid) {
		this.userid = userid;
	}

	@Column(name = "productid", nullable = false)
	public int getProductid() {
		return this.productid;
	}

	public void setProductid(int productid) {
		this.productid = productid;
	}

	@Column(name = "context", nullable = false, length = 250)
	public String getContext() {
		return this.context;
	}

	public void setContext(String context) {
		this.context = context;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof CommentId))
			return false;
		CommentId castOther = (CommentId) other;

		return (this.getId() == castOther.getId()) && (this.getUserid() == castOther.getUserid())
				&& (this.getProductid() == castOther.getProductid())
				&& ((this.getContext() == castOther.getContext()) || (this.getContext() != null
						&& castOther.getContext() != null && this.getContext().equals(castOther.getContext())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getId();
		result = 37 * result + this.getUserid();
		result = 37 * result + this.getProductid();
		result = 37 * result + (getContext() == null ? 0 : this.getContext().hashCode());
		return result;
	}

}
